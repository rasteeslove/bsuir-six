-- 1: to create 3 tables of custom structure
-- primary key is required, as well as  at least 3 columns,
-- foreign keys, char columns, number columns and
-- datetime columns
create table aircraft_carrier (
    id number generated by default on null as identity primary key,
    name varchar(50),
    displacement number,
    max_aircraft_number int,
    commissioned date
);
-- drop table aircraft_carrier;

create table fighter_jet (
    id number generated by default on null as identity primary key,
    type varchar2(50),
    speed number,
    aircraft_carrier_id number,
    constraint ac_fj_fk foreign key (aircraft_carrier_id)
        references aircraft_carrier(id) on delete cascade
);
-- drop table fighter_jet;

create table bomber (
    id number generated by default on null as identity primary key,
    type varchar2(50),
    bombs_capacity int,
    aircraft_carrier_id number,
    constraint ac_b_fk foreign key (aircraft_carrier_id)
        references aircraft_carrier(id) on delete cascade
);
-- drop table bomber;


-- 2: to implement a mechanism of saving DML changes on the tables

create table aircraft_carrier_audit (
    operation_id number generated by default on null as identity primary key,
    operation_type varchar2(10),
    operation_ts timestamp,
    operation_reverted number,
    old_ac_id number,
    new_ac_id number,
    old_name varchar(50),
    new_name varchar(50),
    old_displacement number,
    new_displacement number,
    old_max_aircraft_number int,
    new_max_aircraft_number int,
    old_commissioned date,
    new_commissioned date
);
-- drop table aircraft_carrier_audit;

create table fighter_jet_audit (
    operation_id number generated by default on null as identity primary key,
    operation_type varchar2(10),
    operation_ts timestamp,
    operation_reverted number,
    old_fj_id number,
    new_fj_id number,
    old_type varchar2(50),
    new_type varchar2(50),
    old_speed number,
    new_speed number,
    old_aircraft_carrier_id number,
    new_aircraft_carrier_id number
);
-- drop table fighter_jet_audit;

create table bomber_audit (
    operation_id number generated by default on null as identity primary key,
    operation_type varchar2(10),
    operation_ts timestamp,
    operation_reverted number,
    old_b_id number,
    new_b_id number,
    old_type varchar2(50),
    new_type varchar2(50),
    old_bombs_capacity int,
    new_bombs_capacity int,
    old_aircraft_carrier_id number,
    new_aircraft_carrier_id number
);
-- drop table bomber_audit;

create or replace trigger aircraft_carrier_audit_trigger before
    update or insert or delete on aircraft_carrier
    for each row
begin
    case
        when updating then
            insert into aircraft_carrier_audit (
                operation_type,
                operation_ts,
                operation_reverted,
                old_ac_id,
                new_ac_id,
                old_name,
                new_name,
                old_displacement,
                new_displacement,
                old_max_aircraft_number,
                new_max_aircraft_number,
                old_commissioned,
                new_commissioned
            ) values (
                'UPDATE',
                current_timestamp,
                0,
                :old.id,
                :new.id,
                :old.name,
                :new.name,
                :old.displacement,
                :new.displacement,
                :old.max_aircraft_number,
                :new.max_aircraft_number,
                :old.commissioned,
                :new.commissioned
            );
        when inserting then
            insert into aircraft_carrier_audit (
                operation_type,
                operation_ts,
                operation_reverted,
                new_ac_id,
                new_name,
                new_displacement,
                new_max_aircraft_number,
                new_commissioned
            ) values (
                'INSERT',
                current_timestamp,
                0,
                :new.id,
                :new.name,
                :new.displacement,
                :new.max_aircraft_number,
                :new.commissioned
            );
        when deleting then
            insert into aircraft_carrier_audit (
                operation_type,
                operation_ts,
                operation_reverted,
                old_ac_id,
                old_name,
                old_displacement,
                old_max_aircraft_number,
                old_commissioned
            ) values (
                'DELETE',
                current_timestamp,
                0,
                :old.id,
                :old.name,
                :old.displacement,
                :old.max_aircraft_number,
                :old.commissioned
            );
    end case;
end;

create or replace trigger fighter_jet_audit_trigger before
    update or insert or delete on fighter_jet
    for each row
begin
    case
        when updating then
            insert into fighter_jet_audit (
                operation_type,
                operation_ts,
                operation_reverted,
                old_fj_id,
                new_fj_id,
                old_type,
                new_type,
                old_speed,
                new_speed,
                old_aircraft_carrier_id,
                new_aircraft_carrier_id
            ) values (
                'UPDATE',
                current_timestamp,
                0,
                :old.id,
                :new.id,
                :old.type,
                :new.type,
                :old.speed,
                :new.speed,
                :old.aircraft_carrier_id,
                :new.aircraft_carrier_id
            );
        when inserting then
            insert into fighter_jet_audit (
                operation_type,
                operation_ts,
                operation_reverted,
                new_fj_id,
                new_type,
                new_speed,
                new_aircraft_carrier_id
            ) values (
                'INSERT',
                current_timestamp,
                0,
                :new.id,
                :new.type,
                :new.speed,
                :new.aircraft_carrier_id
            );
        when deleting then
            insert into fighter_jet_audit (
                operation_type,
                operation_ts,
                operation_reverted,
                old_fj_id,
                old_type,
                old_speed,
                old_aircraft_carrier_id
            ) values (
                'DELETE',
                current_timestamp,
                0,
                :old.id,
                :old.type,
                :old.speed,
                :old.aircraft_carrier_id
            );
    end case;
end;

create or replace trigger bomber_audit_trigger before
    update or insert or delete on bomber
    for each row
begin
    case
        when updating then
            insert into bomber_audit (
                operation_type,
                operation_ts,
                operation_reverted,
                old_b_id,
                new_b_id,
                old_type,
                new_type,
                old_bombs_capacity,
                new_bombs_capacity,
                old_aircraft_carrier_id,
                new_aircraft_carrier_id
            ) values (
                'UPDATE',
                current_timestamp,
                0,
                :old.id,
                :new.id,
                :old.type,
                :new.type,
                :old.bombs_capacity,
                :new.bombs_capacity,
                :old.aircraft_carrier_id,
                :new.aircraft_carrier_id
            );
        when inserting then
            insert into bomber_audit (
                operation_type,
                operation_ts,
                operation_reverted,
                new_b_id,
                new_type,
                new_bombs_capacity,
                new_aircraft_carrier_id
            ) values (
                'INSERT',
                current_timestamp,
                0,
                :new.id,
                :new.type,
                :new.bombs_capacity,
                :new.aircraft_carrier_id
            );
        when deleting then
            insert into bomber_audit (
                operation_type,
                operation_ts,
                operation_reverted,
                old_b_id,
                old_type,
                old_bombs_capacity,
                old_aircraft_carrier_id
            ) values (
                'DELETE',
                current_timestamp,
                0,
                :old.id,
                :old.type,
                :old.bombs_capacity,
                :old.aircraft_carrier_id
            );
    end case;
end;

-- testing audit

-- phase 1:
-- (timestamp "A" is here)

begin
    insert into aircraft_carrier(
        name, displacement, max_aircraft_number, commissioned
    ) values (
        'A', 200, 45, sysdate
    );
    insert into aircraft_carrier(
        name, displacement, max_aircraft_number, commissioned
    ) values (
        'B', 120, 30, sysdate
    );
    insert into aircraft_carrier(
        name, displacement, max_aircraft_number, commissioned
    ) values (
        'C', 80, 15, sysdate
    );
end;

begin
    insert into fighter_jet(
        "TYPE", speed, aircraft_carrier_id
    ) values (
        'F1', 300, 1
    );
    insert into fighter_jet(
        "TYPE", speed, aircraft_carrier_id
    ) values (
        'F1', 290, 2
    );
    insert into fighter_jet(
        "TYPE", speed, aircraft_carrier_id
    ) values (
        'F1', 295, 1
    );
    insert into fighter_jet(
        "TYPE", speed, aircraft_carrier_id
    ) values (
        'F2 type 2', 255, 1
    );
    insert into fighter_jet(
        "TYPE", speed, aircraft_carrier_id
    ) values (
        'F2 type 2', 250, 2
    );
    insert into fighter_jet(
        "TYPE", speed, aircraft_carrier_id
    ) values (
        'F2 type 2', 245, 1
    );
    insert into fighter_jet(
        "TYPE", speed, aircraft_carrier_id
    ) values (
        'F2 type 3', 220, 2
    );
    insert into fighter_jet(
        "TYPE", speed, aircraft_carrier_id
    ) values (
        'F2 type 4', 215, 1
    );
    insert into fighter_jet(
        "TYPE", speed, aircraft_carrier_id
    ) values (
        'F2 type 5', 215, 3
    );
end;

begin
    insert into bomber(
        "TYPE", bombs_capacity, aircraft_carrier_id
    ) values (
        'B1', 60, 1
    );
    insert into bomber(
        "TYPE", bombs_capacity, aircraft_carrier_id
    ) values (
        'B1', 60, 2
    );
    insert into bomber(
        "TYPE", bombs_capacity, aircraft_carrier_id
    ) values (
        'B1', 58, 1
    );
    insert into bomber(
        "TYPE", bombs_capacity, aircraft_carrier_id
    ) values (
        'B2 type 2', 48, 1
    );
    insert into bomber(
        "TYPE", bombs_capacity, aircraft_carrier_id
    ) values (
        'B2 type 2', 48, 2
    );
    insert into bomber(
        "TYPE", bombs_capacity, aircraft_carrier_id
    ) values (
        'B2 type 2', 48, 1
    );
    insert into bomber(
        "TYPE", bombs_capacity, aircraft_carrier_id
    ) values (
        'B2 type 3', 40, 2
    );
    insert into bomber(
        "TYPE", bombs_capacity, aircraft_carrier_id
    ) values (
        'B2 type 4', 38, 1
    );
    insert into bomber(
        "TYPE", bombs_capacity, aircraft_carrier_id
    ) values (
        'B2 type 5', 37, 3
    );
end;

begin
    update aircraft_carrier
    set max_aircraft_number=48 where max_aircraft_number = 45;

    update fighter_jet
    set speed=220 where speed = 215;

    update bomber
    set bombs_capacity=49 where bombs_capacity = 48;
end;

begin
    delete from fighter_jet where speed = 250;
    delete from bomber where bombs_capacity = 38;
    delete from aircraft_carrier where max_aircraft_number = 15;
end;

select * from aircraft_carrier;
select * from fighter_jet;
select * from bomber;

select * from aircraft_carrier_audit;
select * from fighter_jet_audit;
select * from bomber_audit;

-- phase 2:
-- (timestamp "B" is here)

begin
    insert into aircraft_carrier (id, name, displacement, max_aircraft_number, commissioned) values (
        42, 'D', 100, 25, sysdate
    );
    delete from aircraft_carrier where id = 1;
    update aircraft_carrier set max_aircraft_number=28 where id = 42;
    insert into fighter_jet("TYPE", speed, aircraft_carrier_id) values (
        'F3', 275, 42
    );
    insert into fighter_jet("TYPE", speed, aircraft_carrier_id) values (
        'F3', 275, 42
    );
end;

select * from aircraft_carrier;
select * from fighter_jet;
select * from bomber;

select * from aircraft_carrier_audit;
select * from fighter_jet_audit;
select * from bomber_audit;

-- 3: to implement an overloaded package procedure accepting either
-- datetime, or ms number; in the first case there is to be a rollback
-- to the specified datetime, while in the second case the rollback to
-- be performed to the state of the specified number of ms earlier

create or replace procedure restore_data(restore_ts timestamp)
    is
    procedure restore_ac(restore_ts timestamp)
        is
    begin
        for entry in (select * from aircraft_carrier_audit
                      where operation_ts >= restore_ts
                      and operation_reverted = 0
                      order by operation_ts desc)
        loop
            if entry.operation_type = 'INSERT' then
                delete from aircraft_carrier where id = entry.new_ac_id;
            elsif entry.operation_type = 'UPDATE' then
                update aircraft_carrier
                set id=entry.old_ac_id,
                    name=entry.old_name,
                    displacement=entry.old_displacement,
                    max_aircraft_number=entry.old_displacement,
                    commissioned=entry.old_commissioned
                where id = entry.new_ac_id;
            else
                insert into aircraft_carrier(
                    id,
                    name,
                    displacement,
                    max_aircraft_number,
                    commissioned
                ) values (
                    entry.old_ac_id,
                    entry.old_name,
                    entry.old_displacement,
                    entry.old_max_aircraft_number,
                    entry.old_commissioned
                );
            end if;
            update aircraft_carrier_audit
            set operation_reverted=1 where operation_id = entry.operation_id;
        end loop;
    end restore_ac;
    procedure restore_fj(restore_ts timestamp)
        is
    begin
        for entry in (select * from fighter_jet_audit
                      where operation_ts >= restore_ts
                      and operation_reverted = 0
                      order by operation_ts desc)
        loop
            if entry.operation_type = 'INSERT' then
                    delete from fighter_jet where id = entry.new_fj_id;
                elsif entry.operation_type = 'UPDATE' then
                    update fighter_jet
                    set id=entry.old_fj_id,
                        "TYPE"=entry.old_type,
                        speed=entry.old_speed,
                        aircraft_carrier_id=entry.old_aircraft_carrier_id
                    where id = entry.new_fj_id;
                else
                    insert into fighter_jet(
                        id,
                        "TYPE",
                        speed,
                        aircraft_carrier_id
                    ) values (
                        entry.old_fj_id,
                        entry.old_type,
                        entry.old_speed,
                        entry.old_aircraft_carrier_id
                    );
            end if;
            update fighter_jet_audit
            set operation_reverted=1 where operation_id = entry.operation_id;
        end loop;
    end restore_fj;
    procedure restore_b(restore_ts timestamp)
        is
    begin
        for entry in (select * from bomber_audit
                      where operation_ts >= restore_ts
                      and operation_reverted = 0
                      order by operation_ts desc)
        loop
            if entry.operation_type = 'INSERT' then
                delete from bomber where id=entry.new_b_id;
            elsif entry.operation_type = 'UPDATE' then
                update bomber
                set id=entry.old_b_id,
                    "TYPE"=entry.old_type,
                    bombs_capacity=entry.old_bombs_capacity,
                    aircraft_carrier_id=entry.old_aircraft_carrier_id
                where id = entry.new_b_id;
            else
                insert into bomber(
                    id,
                    "TYPE",
                    bombs_capacity,
                    aircraft_carrier_id
                ) values (
                    entry.old_b_id,
                    entry.old_type,
                    entry.old_bombs_capacity,
                    entry.old_aircraft_carrier_id
                );
            end if;
            update bomber_audit
            set operation_reverted=1 where operation_id = entry.operation_id;
        end loop;
    end restore_b;
begin
    restore_ac(restore_ts);
    restore_fj(restore_ts);
    restore_b(restore_ts);
end restore_data;

-- testing rollbacks
begin
    restore_data(to_timestamp('2022/05/14 15:00:00', 'YYYY/MM/DD HH24:MI:SS'));
end;

select * from aircraft_carrier;
select * from fighter_jet;
select * from bomber;

select * from aircraft_carrier_audit;
select * from fighter_jet_audit;
select * from bomber_audit;

-- 4: create a procedure to generate html report containing the changes
--    made since the last html report procedure call or since the specified
--    timestamp

create or replace function create_html_report(ts in timestamp)
return varchar2
as
    html_document varchar2(10000) := '<!DOCTYPE html>' || chr(10)
        || '<html>' || chr(10)
        || '  <head>' || chr(10)
        || '    <title>Report</title>' || chr(10)
        || '  </head>' || chr(10)
        || '  <body>' || chr(10);
    sys_ref_c sys_refcursor;
    ac_audit_row aircraft_carrier_audit%rowtype;
    fj_audit_row fighter_jet_audit%rowtype;
    b_audit_row bomber_audit%rowtype;
begin
    html_document := html_document
        || '    <h1>aircraft_carrier</h1>' || chr(10);
    open sys_ref_c
        for 'select * from aircraft_carrier_audit ' ||
            'where operation_reverted = 0 and operation_ts >= to_timestamp(''' ||
            to_char(ts, 'DD-MM-YYYY HH24:MI:SS') ||
            ''', ''DD-MM-YYYY HH24:MI:SS'')';
        loop
            fetch sys_ref_c into ac_audit_row;
            exit when sys_ref_c%notfound;
            case ac_audit_row.operation_type
                when 'INSERT' then
                    html_document := html_document ||
                        '    <p>' ||
                        ac_audit_row.operation_type ||
                        ': (' ||
                        ac_audit_row.new_ac_id || ', ' ||
                        ac_audit_row.new_name || ', ' ||
                        ac_audit_row.new_displacement || ', ' ||
                        ac_audit_row.new_max_aircraft_number || ', ' ||
                        ac_audit_row.new_commissioned ||
                        ')<\p>' || chr(10);
                when 'UPDATE' then
                    html_document := html_document ||
                        '    <p>' ||
                        ac_audit_row.operation_type ||
                        ': (' ||
                        ac_audit_row.old_ac_id || ', ' ||
                        ac_audit_row.old_name || ', ' ||
                        ac_audit_row.old_displacement || ', ' ||
                        ac_audit_row.old_max_aircraft_number || ', ' ||
                        ac_audit_row.old_commissioned ||
                        ') -> (' ||
                        ac_audit_row.new_ac_id || ', ' ||
                        ac_audit_row.new_name || ', ' ||
                        ac_audit_row.new_displacement || ', ' ||
                        ac_audit_row.new_max_aircraft_number || ', ' ||
                        ac_audit_row.new_commissioned ||
                        ')<\p>' || chr(10);
                else
                    html_document := html_document ||
                        '    <p>' ||
                        ac_audit_row.operation_type ||
                        ': (' ||
                        ac_audit_row.old_ac_id || ', ' ||
                        ac_audit_row.old_name || ', ' ||
                        ac_audit_row.old_displacement || ', ' ||
                        ac_audit_row.old_max_aircraft_number || ', ' ||
                        ac_audit_row.old_commissioned ||
                        ')<\p>' || chr(10);
            end case;
        end loop;
    close sys_ref_c;

    html_document := html_document
        || '    <h1>fighter_jet</h1>' || chr(10);

    open sys_ref_c
        for 'select * from fighter_jet_audit ' ||
            'where operation_reverted = 0 and operation_ts >= to_timestamp(''' ||
            to_char(ts, 'DD-MM-YYYY HH24:MI:SS') ||
            ''', ''DD-MM-YYYY HH24:MI:SS'')';
        loop
            fetch sys_ref_c into fj_audit_row;
            exit when sys_ref_c%notfound;
            case fj_audit_row.operation_type
                when 'INSERT' then
                    html_document := html_document ||
                        '    <p>' ||
                        fj_audit_row.operation_type ||
                        ': (' ||
                        fj_audit_row.new_fj_id || ', ' ||
                        fj_audit_row.new_type || ', ' ||
                        fj_audit_row.new_speed || ', ' ||
                        fj_audit_row.new_aircraft_carrier_id || ', ' ||
                        ')<\p>' || chr(10);
                when 'UPDATE' then
                    html_document := html_document ||
                        '    <p>' ||
                        fj_audit_row.operation_type ||
                        ': (' ||
                        fj_audit_row.old_fj_id || ', ' ||
                        fj_audit_row.old_type || ', ' ||
                        fj_audit_row.old_speed || ', ' ||
                        fj_audit_row.old_aircraft_carrier_id || ', ' ||
                        ') -> (' ||
                        fj_audit_row.new_fj_id || ', ' ||
                        fj_audit_row.new_type || ', ' ||
                        fj_audit_row.new_speed || ', ' ||
                        fj_audit_row.new_aircraft_carrier_id || ', ' ||
                        ')<\p>' || chr(10);
                else
                    html_document := html_document ||
                        '    <p>' ||
                        fj_audit_row.operation_type ||
                        ': (' ||
                        fj_audit_row.old_fj_id || ', ' ||
                        fj_audit_row.old_type || ', ' ||
                        fj_audit_row.old_speed || ', ' ||
                        fj_audit_row.old_aircraft_carrier_id || ', ' ||
                        ')<\p>' || chr(10);
            end case;
        end loop;
    close sys_ref_c;

    html_document := html_document
        || '    <h1>bomber</h1>' || chr(10);

    open sys_ref_c
        for 'select * from bomber_audit ' ||
            'where operation_reverted = 0 and operation_ts >= to_timestamp(''' ||
            to_char(ts, 'DD-MM-YYYY HH24:MI:SS') ||
            ''', ''DD-MM-YYYY HH24:MI:SS'')';
        loop
            fetch sys_ref_c into b_audit_row;
            exit when sys_ref_c%notfound;
            case b_audit_row.operation_type
                when 'INSERT' then
                    html_document := html_document ||
                        '    <p>' ||
                        b_audit_row.operation_type ||
                        ': (' ||
                        b_audit_row.new_b_id || ', ' ||
                        b_audit_row.new_type || ', ' ||
                        b_audit_row.new_bombs_capacity || ', ' ||
                        b_audit_row.new_aircraft_carrier_id || ', ' ||
                        ')<\p>' || chr(10);
                when 'UPDATE' then
                    html_document := html_document ||
                        '    <p>' ||
                        b_audit_row.operation_type ||
                        ': (' ||
                        b_audit_row.old_b_id || ', ' ||
                        b_audit_row.old_type || ', ' ||
                        b_audit_row.old_bombs_capacity || ', ' ||
                        b_audit_row.old_aircraft_carrier_id || ', ' ||
                        ') -> (' ||
                        b_audit_row.new_b_id || ', ' ||
                        b_audit_row.new_type || ', ' ||
                        b_audit_row.new_bombs_capacity || ', ' ||
                        b_audit_row.new_aircraft_carrier_id || ', ' ||
                        ')<\p>' || chr(10);
                else
                    html_document := html_document ||
                        '    <p>' ||
                        b_audit_row.operation_type ||
                        ': (' ||
                        b_audit_row.old_b_id || ', ' ||
                        b_audit_row.old_type || ', ' ||
                        b_audit_row.old_bombs_capacity || ', ' ||
                        b_audit_row.old_aircraft_carrier_id || ', ' ||
                        ')<\p>' || chr(10);
            end case;
        end loop;
    close sys_ref_c;

    html_document := html_document || '  </body>' || '</html>';
    return html_document;
end;

-- test html report

declare
    res varchar2(10000);
begin
    -- timestamp "A"
    res := create_html_report(to_timestamp('2022/05/14 13:19:59', 'YYYY/MM/DD HH24:MI:SS'));
    dbms_output.put_line(res);
    -- timestamp "B"
    res := create_html_report(to_timestamp('2022/05/14 15:00:00', 'YYYY/MM/DD HH24:MI:SS'));
    dbms_output.put_line(res);
end;


-- ok so, this doesn't quite work
-- the easy part of something not working is put_line, in a begin-end section above
-- that's probably due to some setting not being toggled to allow output
-- the hard part is the fact that the method of restoring data is stupid and what needs to be going on
-- is: while there are changes not reverted since the restore_ts in the tables, the last one to be
-- reverted
-- that's pretty hard to implement in SQL tbh
