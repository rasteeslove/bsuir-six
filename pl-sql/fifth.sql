-- 1: to create 3 tables of custom structure
-- primary key is required, as well as  at least 3 columns,
-- foreign keys, char columns, number columns and
-- datetime columns
create table aircraft_carrier (
    id number generated by default on null as identity primary key,
    name varchar(50),
    displacement number,
    max_aircraft_number int,
    commissioned date
);
-- drop table aircraft_carrier;

create table fighter_jet (
    id number generated by default on null as identity primary key,
    type varchar2(50),
    speed number,
    aircraft_carrier_id number,
    constraint ac_fj_fk foreign key (aircraft_carrier_id)
        references aircraft_carrier(id) on delete cascade
);
-- drop table fighter_jet;

create table bomber (
    id number generated by default on null as identity primary key,
    type varchar2(50),
    bombs_capacity int,
    aircraft_carrier_id number,
    constraint ac_b_fk foreign key (aircraft_carrier_id)
        references aircraft_carrier(id) on delete cascade
);
-- drop table bomber;


-- 2: to implement a mechanism of saving DML changes on the tables

create table aircraft_carrier_audit (
    id number generated by default on null as identity primary key,
    operation varchar2(10),
    operation_ts timestamp,
    ac_id number,
    name varchar(50),
    displacement number,
    max_aircraft_number int,
    commissioned date
);
-- drop table aircraft_carrier_audit;

create table fighter_jet_audit (
    id number generated by default on null as identity primary key,
    operation varchar2(10),
    operation_ts timestamp,
    fj_id number,
    type varchar2(50),
    speed number,
    aircraft_carrier_id number
);
-- drop table fighter_jet_audit;

create table bomber_audit (
    id number generated by default on null as identity primary key,
    operation varchar2(10),
    operation_ts timestamp,
    b_id number,
    type varchar2(50),
    bombs_capacity int,
    aircraft_carrier_id number
);
-- drop table bomber_audit;

create or replace trigger aircraft_carrier_audit_trigger before
    update or insert or delete on aircraft_carrier
    for each row
begin
    case
        when updating then
            insert into aircraft_carrier_audit (
                operation,
                operation_ts,
                ac_id,
                name,
                displacement,
                max_aircraft_number,
                commissioned
            ) values (
                'UPDATE',
                current_timestamp,
                :old.id,
                :old.name,
                :old.displacement,
                :old.max_aircraft_number,
                :old.commissioned
            );
        when inserting then
            insert into aircraft_carrier_audit (
                operation,
                operation_ts,
                ac_id,
                name,
                displacement,
                max_aircraft_number,
                commissioned
            ) values (
                'INSERT',
                current_timestamp,
                :new.id,
                :new.name,
                :new.displacement,
                :new.max_aircraft_number,
                :new.commissioned
            );
        when deleting then
            insert into aircraft_carrier_audit (
                operation,
                operation_ts,
                ac_id,
                name,
                displacement,
                max_aircraft_number,
                commissioned
            ) values (
                'DELETE',
                current_timestamp,
                :old.id,
                :old.name,
                :old.displacement,
                :old.max_aircraft_number,
                :old.commissioned
            );
    end case;
end;

create or replace trigger fighter_jet_audit_trigger before
    update or insert or delete on fighter_jet
    for each row
begin
    case
        when updating then
            insert into fighter_jet_audit (
                operation,
                operation_ts,
                fj_id,
                type,
                speed,
                aircraft_carrier_id
            ) values (
                'UPDATE',
                current_timestamp,
                :old.id,
                :old.type,
                :old.speed,
                :old.aircraft_carrier_id
            );
        when inserting then
            insert into fighter_jet_audit (
                operation,
                operation_ts,
                fj_id,
                type,
                speed,
                aircraft_carrier_id
            ) values (
                'INSERT',
                current_timestamp,
                :new.id,
                :new.type,
                :new.speed,
                :new.aircraft_carrier_id
            );
        when deleting then
            insert into fighter_jet_audit (
                operation,
                operation_ts,
                fj_id,
                type,
                speed,
                aircraft_carrier_id
            ) values (
                'DELETE',
                current_timestamp,
                :old.id,
                :old.type,
                :old.speed,
                :old.aircraft_carrier_id
            );
    end case;
end;

create or replace trigger bomber_audit_trigger before
    update or insert or delete on bomber
    for each row
begin
    case
        when updating then
            insert into bomber_audit (
                operation,
                operation_ts,
                b_id,
                type,
                bombs_capacity,
                aircraft_carrier_id
            ) values (
                'UPDATE',
                current_timestamp,
                :old.id,
                :old.type,
                :old.bombs_capacity,
                :old.aircraft_carrier_id
            );
        when inserting then
            insert into bomber_audit (
                operation,
                operation_ts,
                b_id,
                type,
                bombs_capacity,
                aircraft_carrier_id
            ) values (
                'INSERT',
                current_timestamp,
                :new.id,
                :new.type,
                :new.bombs_capacity,
                :new.aircraft_carrier_id
            );
        when deleting then
            insert into bomber_audit (
                operation,
                operation_ts,
                b_id,
                type,
                bombs_capacity,
                aircraft_carrier_id
            ) values (
                'DELETE',
                current_timestamp,
                :old.id,
                :old.type,
                :old.bombs_capacity,
                :old.aircraft_carrier_id
            );
    end case;
end;

-- testing audit

-- ...


-- 3: to implement an overloaded package procedure accepting either
-- datetime, or ms number; in the first case there is to be a rollback
-- to the specified datetime, while in the second case the rollback to
-- be performed to the state of the specified number of ms earlier

create or replace procedure restore_data(restore_ts timestamp)
    is
    procedure restore_ac(restore_ts timestamp)
        is
    begin
        for entry in (select * from aircraft_carrier_audit
                      where operation_ts >= restore_ts
                      order by operation_ts desc)
        loop
            if entry.operation = 'INSERT' then
                delete from aircraft_carrier where id = entry.ac_id;
            elsif entry.operation = 'UPDATE' then
                update aircraft_carrier
                set name=entry.name,
                    displacement=entry.displacement,
                    max_aircraft_number=entry.displacement,
                    commissioned=entry.commissioned
                where id = entry.ac_id;
            else
                insert into aircraft_carrier(
                    id,
                    name,
                    displacement,
                    max_aircraft_number,
                    commissioned
                ) values (
                    entry.ac_id,
                    entry.name,
                    entry.displacement,
                    entry.max_aircraft_number,
                    entry.commissioned
                );
            end if;
        end loop;
    end restore_ac;
    procedure restore_fj(restore_ts timestamp)
        is
    begin
        for entry in (select * from fighter_jet_audit
                      where operation_ts >= restore_ts
                      order by operation_ts desc)
        loop
            if entry.operation = 'INSERT' then
                    delete from fighter_jet where id = entry.fj_id;
                elsif entry.operation = 'UPDATE' then
                    update fighter_jet
                    set "TYPE"=entry.type,
                        speed=entry.speed,
                        aircraft_carrier_id=entry.aircraft_carrier_id
                    where id = entry.fj_id;
                else
                    insert into fighter_jet(
                        id,
                        "TYPE",
                        speed,
                        aircraft_carrier_id
                    ) values (
                        entry.fj_id,
                        entry.type,
                        entry.speed,
                        entry.aircraft_carrier_id
                    );
            end if;
        end loop;
    end restore_fj;
    procedure restore_b(restore_ts timestamp)
        is
    begin
        for entry in (select * from bomber_audit
                      where operation_ts >= restore_ts
                      order by operation_ts desc)
        loop
            if entry.operation = 'INSERT' then
                delete from bomber where id=entry.b_id;
            elsif entry.operation = 'UPDATE' then
                update bomber
                set "TYPE"=entry.type,
                    bombs_capacity=entry.bombs_capacity,
                    aircraft_carrier_id=entry.aircraft_carrier_id
                where id = entry.b_id;
            else
                insert into bomber(
                    id,
                    "TYPE",
                    bombs_capacity,
                    aircraft_carrier_id
                ) values (
                    entry.b_id,
                    entry.type,
                    entry.bombs_capacity,
                    entry.aircraft_carrier_id
                );
            end if;
        end loop;
    end restore_b;
begin
    restore_ac(restore_ts);
    restore_fj(restore_ts);
    restore_b(restore_ts);
end restore_data;

-- testing rollbacks

-- ...

-- 4: create a procedure to generate html report containing the changes
--    made since the last html report procedure call or since the specified
--    timestamp

-- ...
